{
  "name": "Compare optimization methods for Peak Memory problem",
  "kernels": [
    "predict_peak_mem"
  ],
  "GPUs": [
    "generator"
  ],
  "strategy_defaults": {
    "repeats": 250,
    "nums_of_evaluations": [
      20,
      40,
      60,
      80,
      100,
      120,
      140,
      160,
      180,
      200,
      220,
      240,
      260,
      280,
      300,
      320,
      340,
      360,
      380,
      400,
      420,
      440,
      460,
      480,
      500,
      520,
      540,
      560,
      580,
      600,
      620,
      640,
      660,
      680,
      700,
      720,
      740,
      760,
      780,
      800,
      820,
      840,
      860,
      880,
      900,
      920,
      940,
      960,
      980,
      1000
    ],
    "record_data": [
      "time",
      "GFLOP/s"
    ]
  },
  "strategies": [
    {
      "name": "random_sample_henk",
      "strategy": "random_sample",
      "display_name": "Random sampling",
      "repeats": 100,
      "options": {
        "max_fevals": 2000,
        "fraction": 0.25
      },
      "nums_of_evaluations": [
        20,
        40,
        60,
        80,
        100,
        120,
        140,
        160,
        180,
        200,
        220,
        240,
        260,
        280,
        300,
        320,
        340,
        360,
        380,
        400,
        420,
        440,
        460,
        480,
        500,
        520,
        540,
        560,
        580,
        600,
        620,
        640,
        660,
        680,
        700,
        720,
        740,
        760,
        780,
        800,
        820,
        840,
        860,
        880,
        900,
        920,
        940,
        960,
        980,
        1000,
        1020,
        1040,
        1060,
        1080,
        1100,
        1120,
        1140,
        1160,
        1180,
        1200,
        1220,
        1240,
        1260,
        1280,
        1300,
        1320,
        1340,
        1360,
        1380,
        1400,
        1420,
        1440,
        1460,
        1480,
        1500,
        1520,
        1540,
        1560,
        1580,
        1600,
        1620,
        1640,
        1660,
        1680,
        1700,
        1720,
        1740,
        1760,
        1780,
        1800,
        1820,
        1840,
        1860,
        1880,
        1900,
        1920,
        1940,
        1960,
        1980,
        2000
      ]
    },
    {
      "name": "bo_henk",
      "strategy": "bayes_opt_GPyTorch_lean",
      "display_name": "Bayesian Optimization",
      "repeats": 50,
      "options": {
        "max_fevals": 1000
      }
    },
    {
      "name": "ga_henk",
      "strategy": "genetic_algorithm",
      "display_name": "GA",
      "repeats": 50,
      "options": {
        "max_fevals": 1000
      }
    },
    {
      "name": "mls_henk",
      "strategy": "mls",
      "display_name": "Multi-start Local Search",
      "options": {
        "max_fevals": 2000
      },
      "nums_of_evaluations": [
        20,
        40,
        60,
        80,
        100,
        120,
        140,
        160,
        180,
        200,
        220,
        240,
        260,
        280,
        300,
        320,
        340,
        360,
        380,
        400,
        420,
        440,
        460,
        480,
        500,
        520,
        540,
        560,
        580,
        600,
        620,
        640,
        660,
        680,
        700,
        720,
        740,
        760,
        780,
        800,
        820,
        840,
        860,
        880,
        900,
        920,
        940,
        960,
        980,
        1000,
        1020,
        1040,
        1060,
        1080,
        1100,
        1120,
        1140,
        1160,
        1180,
        1200,
        1220,
        1240,
        1260,
        1280,
        1300,
        1320,
        1340,
        1360,
        1380,
        1400,
        1420,
        1440,
        1460,
        1480,
        1500,
        1520,
        1540,
        1560,
        1580,
        1600,
        1620,
        1640,
        1660,
        1680,
        1700,
        1720,
        1740,
        1760,
        1780,
        1800,
        1820,
        1840,
        1860,
        1880,
        1900,
        1920,
        1940,
        1960,
        1980,
        2000
      ]
    },
    {
      "name": "greedy_mls_henk",
      "strategy": "greedy_mls",
      "display_name": "Greedy MLS",
      "options": {
        "max_fevals": 2000
      },
      "nums_of_evaluations": [
        20,
        40,
        60,
        80,
        100,
        120,
        140,
        160,
        180,
        200,
        220,
        240,
        260,
        280,
        300,
        320,
        340,
        360,
        380,
        400,
        420,
        440,
        460,
        480,
        500,
        520,
        540,
        560,
        580,
        600,
        620,
        640,
        660,
        680,
        700,
        720,
        740,
        760,
        780,
        800,
        820,
        840,
        860,
        880,
        900,
        920,
        940,
        960,
        980,
        1000,
        1020,
        1040,
        1060,
        1080,
        1100,
        1120,
        1140,
        1160,
        1180,
        1200,
        1220,
        1240,
        1260,
        1280,
        1300,
        1320,
        1340,
        1360,
        1380,
        1400,
        1420,
        1440,
        1460,
        1480,
        1500,
        1520,
        1540,
        1560,
        1580,
        1600,
        1620,
        1640,
        1660,
        1680,
        1700,
        1720,
        1740,
        1760,
        1780,
        1800,
        1820,
        1840,
        1860,
        1880,
        1900,
        1920,
        1940,
        1960,
        1980,
        2000
      ]
    }
  ]
}
